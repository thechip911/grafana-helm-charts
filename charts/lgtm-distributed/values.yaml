---
grafana:
  # -- Deploy Grafana if enabled. See [upstream readme](https://github.com/grafana/helm-charts/tree/main/charts/grafana#configuration) for full values reference.
  enabled: true

  # -- Grafana data sources config. Connects to all three by default
  datasources:
    datasources.yaml:
      apiVersion: 1
      # -- Datasources linked to the Grafana instance. Override if you disable any components.
      datasources:
        # https://grafana.com/docs/grafana/latest/datasources/loki/#provision-the-loki-data-source
        - name: Loki
          uid: loki
          type: loki
          url: http://{{ .Release.Name }}-loki-gateway
          isDefault: false
        # https://grafana.com/docs/grafana/latest/datasources/prometheus/#provision-the-data-source
        - name: Mimir
          uid: prom
          type: prometheus
          url: http://{{ .Release.Name }}-mimir-nginx/prometheus
          isDefault: true
        # https://grafana.com/docs/grafana/latest/datasources/tempo/configure-tempo-data-source/#provision-the-data-source
        - name: Tempo
          uid: tempo
          type: tempo
          url: http://{{ .Release.Name }}-tempo-query-frontend:3100
          isDefault: false
          jsonData:
            tracesToLogsV2:
              datasourceUid: loki
            lokiSearch:
              datasourceUid: loki
            tracesToMetrics:
              datasourceUid: prom
            serviceMap:
              datasourceUid: prom

loki:
  # -- Deploy Loki if enabled. See [upstream readme](https://github.com/grafana/helm-charts/tree/main/charts/loki-distributed#values) for full values reference.
  enabled: true

# -- Mimir chart values. Resources are set to a minimum by default.
mimir:
  # -- Deploy Mimir if enabled. See [upstream values.yaml](https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml) for full values reference.
  enabled: true
  
  # Mimir configuration as a string value
  config: |
    multitenancy_enabled: true

    blocks_storage:
      backend: filesystem
      filesystem:
        dir: /tmp/blocks
      tsdb:
        dir: /tmp/tsdb

    compactor:
      data_dir: /tmp/compactor
      sharding_ring:
        kvstore:
          store: memberlist

    distributor:
      ring:
        instance_addr: ${POD_IP}
        kvstore:
          store: memberlist

    ingester:
      ring:
        instance_addr: ${POD_IP}
        kvstore:
          store: memberlist
        replication_factor: 1
      lifecycler:
        final_sleep: 0s
        join_after: 0s
        min_ready_duration: 0s
        num_tokens: 512
      max_transfer_retries: 3

    ruler_storage:
      backend: filesystem
      filesystem:
        dir: /tmp/ruler

    alertmanager_storage:
      backend: filesystem
      filesystem:
        dir: /tmp/alertmanager

    memberlist:
      join_members:
        - lgtm-distributed-mimir-memberlist

    store_gateway:
      sharding_ring:
        replication_factor: 1
        kvstore:
          store: memberlist

    # Explicitly disable S3 and Minio
    common:
      storage:
        backend: filesystem
  
  alertmanager:
    kind: StatefulSet  # Ensures predictable pod naming (alertmanager-0, alertmanager-1, etc.)
    persistentVolume:
      enabled: false   # Disable persistent volume
    extraVolumes:
      - name: storage
        emptyDir: {}   # Use ephemeral storage instead
    extraVolumeMounts:
      - name: storage
        mountPath: /tmp
    # Keep topology spread constraints for high availability
    topologySpreadConstraints:
      enabled: true
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    resources:
      requests:
        cpu: 20m
  compactor:
    kind: StatefulSet  # Ensures predictable pod naming (compactor-0, compactor-1, etc.)
    persistentVolume:
      enabled: false   # Disable persistent volume
    extraVolumes:
      - name: storage
        emptyDir: {}   # Use ephemeral storage instead
    extraVolumeMounts:
      - name: storage
        mountPath: /tmp
    # Keep topology spread constraints for high availability
    topologySpreadConstraints:
      enabled: true
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    resources:
      requests:
        cpu: 20m
  distributor:
    resources:
      requests:
        cpu: 20m
  ingester:
    kind: StatefulSet  # Ensures predictable pod naming (ingester-0, ingester-1, etc.)
    replicas: 2
    persistentVolume:
      enabled: false   # Disable persistent volume
    extraVolumes:
      - name: storage
        emptyDir: {}   # Use ephemeral storage instead
    extraVolumeMounts:
      - name: storage
        mountPath: /tmp
    # Keep topology spread constraints for high availability
    topologySpreadConstraints:
      enabled: true
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  overrides_exporter:
    resources:
      requests:
        cpu: 20m
  querier:
    kind: StatefulSet  # Ensures predictable pod naming (querier-0, querier-1, etc.)
    replicas: 1
    persistentVolume:
      enabled: false   # Disable persistent volume
    extraVolumes:
      - name: storage
        emptyDir: {}   # Use ephemeral storage instead
    extraVolumeMounts:
      - name: storage
        mountPath: /tmp
    # Keep topology spread constraints for high availability
    topologySpreadConstraints:
      enabled: true
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    resources:
      requests:
        cpu: 20m
  query_frontend:
    resources:
      requests:
        cpu: 20m
  query_scheduler:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  ruler:
    resources:
      requests:
        cpu: 20m
  store_gateway:
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  # Disable Minio completely since we're using filesystem storage
  minio:
    enabled: false  # Disable Minio completely
    resources:
      requests:
        cpu: 20m
    
  # Disable all Minio-related jobs and hooks
  enterprise_logs_post_install_job:
    enabled: false
  
  enterprise_metrics_post_install_job:
    enabled: false
  
  enterprise_traces_post_install_job:
    enabled: false
  
  # Disable all hooks
  hooks:
    enabled: false
  
  # Disable all post-install jobs
  post_install_job:
    enabled: false
  rollout_operator:
    resources:
      requests:
        cpu: 20m

tempo:
  # -- Deploy Tempo if enabled.  See [upstream readme](https://github.com/grafana/helm-charts/blob/main/charts/tempo-distributed/README.md#values) for full values reference.
  enabled: true
  ingester:
    replicas: 1

grafana-oncall:
  # -- Deploy Grafana OnCall if enabled. See [upstream values.yaml](https://github.com/grafana/oncall/blob/dev/helm/oncall/values.yaml) for full values reference.
  enabled: false
